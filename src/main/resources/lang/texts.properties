elementgui.config.page.new=Configuration file name
elementgui.config.page.procedure=Configuration file variables
modelement.config=Configuration
modelement.config.name=Create a configuration file
modelement.config.description=A mod configuration file
elementgui.config.needs_name=Name cannot be empty
elementgui.config.name=Name of the configuration file:
elementgui.config.categoryname=Name of the configuration category:
elementgui.config.configuration_variables=Variable Type:
elementgui.config.new_category=Add configutarion category
elementgui.config.new_variable=Add configutarion variable
elementgui.config.remove_category=Remove this category
elementgui.config.remove_variable=Remove this variable
elementgui.config.configcategory=Configuration Category
elementgui.config.enable_comment=Variable has a comment
elementgui.config.comment_entry=Variable comment:
elementgui.config.configuration_variable_name=Variable Name:
elementgui.config.variable_value=Default variable value:
elementgui.config.variable_display=Variable display name in file:
elementgui.config.type=Configuration type:
elementgui.config.editor=Configuration editor
elementgui.config.notempty=Name cannot be empty!
elementgui.config.regname=Must be a registry name!
elementgui.config.variable_needs_name=All configuration variables must have names.
elementgui.config.variable_needs_displayname=All configuration variables must have display names.
elementgui.config.category_needs_name=All configuration categories must have names.
dialog.selector.config.title=Configuration file selection
dialog.selector.config.message=Please select a configuration file
blockly.category.configdata=Configuration data
blockly.block.text_variable=Get text variable %1 from configuration element %2
blockly.block.logic_variable=Get logic variable %1 from configuration element %2
blockly.block.number_variable=Get number variable %1 from configuration element %2
blockly.block.stringlist_iterator=Text list iterator
blockly.block.stringlist_variable_foreach=For each entry of text list config variable %1 from configuration element %2 as %3 do %4
blockly.block.config_start=Config start of file
blockly.block.config_start.tooltip=The config file starts being written here
blockly.block.config_category=Category with name %1 %2 %3
blockly.block.config_variable=Variable %2 with name %1 with comment %3
blockly.block.config_logic_variable=Logic variable with display name %1 default value %2
blockly.block.config_number_variable=Number variable with display name %1 default value %2
blockly.block.config_text_variable=Text variable with display name %1 default value %2
blockly.block.config_registryname_variable=Item registry name variable with display name %1 default value %2
blockly.block.config_textlist_variable=Text list variable with display name %1 default value
blockly.block.text_list_mutator.container=Text list
blockly.block.text_list_mutator.input=Text entry
modelement.armortrim=Armor trim
modelement.armortrim.name=Create an armor trim
modelement.armortrim.description=An armor trim is a cosmetic change that can be applied to vanilla armor
modelement.trimmaterial=Trim material
modelement.trimmaterial.name=Create a trim material
modelement.trimmaterial.description=A trim material is an item that can be applied to an armor trim
elementgui.armortrim.smithing_template=Trim smithing template item:
elementgui.armortrim.layer_texture=Layer texture:
elementgui.armortrim.name=Trim name:
elementgui.trimmaterial.item=Item used:
elementgui.trimmaterial.palette=Color palette:
elementgui.trimmaterial.name=Material name:
modelement.blockstates=Blockstates
modelement.blockstates.name=Create blockstates
modelement.blockstates.description=Blockstates are used to change the model and texture of your blocks
elementgui.blockstates.add_entry=Add blockstate
elementgui.blockstates.model=Block model and particle texture
elementgui.blockstates.blockstate=Blockstate
elementgui.blockstates.block=Block to add blockstates to:
elementgui.blockstates.needs_block=A block element must be selected.
elementgui.blockstates.already_exists=The selected block element already has blockstates.
elementgui.blockstates.needs_blockstates=You must add at least one blockstate.
elementgui.block.block_textures=Block textures
blockly.category.blockstates=Blockstates
blockly.block.block_get_blockstate=Get current blockstate of %2 %1
blockly.block.block_with_blockstate=%1 with blockstate set to %2 %3
blockly.block.block_set_blockstate=Set current blockstate of block at x: %1 y: %2 z: %3 to %4
modelement.particlemodel=Particle model
modelement.particlemodel.name=Create a particle model
modelement.particlemodel.description=A particle model allows for using java models as particles
elementgui.particlemodel.particle=Particle element to use:
elementgui.particlemodel.model=Custom java model:
elementgui.particlemodel.render_type=Model render type:
elementgui.particlemodel.custom_model=Custom model:
elementgui.particlemodel.model_scale=Model scale:
elementgui.particlemodel.model_rotation_x=Model X axis rotation:
elementgui.particlemodel.model_rotation_y=Model Y axis rotation:
elementgui.particlemodel.model_rotation_z=Model Z axis rotation:
elementgui.particlemodel.scale_rotation=Scale and rotation
elementgui.particlemodel.needs_particle=You must select a particle element.
elementgui.particlemodel.needs_model=You must select a model.
elementgui.particlemodel.has_model=The selected particle element already has a model.
blockly.block.entity_add_item_with_nbt_number=Add %2 %1 to %5 inventory with NBT number tag of %3 to %4
blockly.block.entity_add_item_with_nbt_logic=Add %2 %1 to %5 inventory with NBT logic tag of %3 to %4
blockly.block.entity_add_item_with_nbt_text=Add %2 %1 to %5 inventory with NBT text tag of %3 to %4
blockly.block.explode_with_fire=Explode at x: %3 y: %4 z: %5 with fire %2 with power %1 source type: %6 %7